@using BLL.DTO;
@using System.Globalization;
@model Web.ViewModels.GameCardsViewModel

<div class="game-cards" style="margin-top:24px;">

    <div class="row">

        @foreach (var item in Model.PaginatedGames)
        {
            <div class="col-lg-3 col-md-4 col-sm-6">

                <div class="card">

                    <div class="card-image-wrapper">

                        <a class="btn-link" asp-controller="Game" asp-action="GameDetails" asp-route-id="@item.Id">
                            <img class="card-img-top" src="@item.HeaderImage" alt="Card image">
                        </a>

                        @if ((await AuthorizationService.AuthorizeAsync(User, "RequireAdministratorRole")).Succeeded)
                        {
                            <div class="btn-group dropup" style="position: absolute; bottom: 3.8%; left: 5%">

                                <button type="button" class="btn btn-dark dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                    Actions
                                </button>

                                <ul class="dropdown-menu">
                                    <li>
                                        <a class="dropdown-item"
                                   asp-controller="AdminGame"
                                   asp-action="DeleteGame"
                                   asp-route-id="@item.Id"
                                   asp-route-pageNumber="@Model.PaginatedGames.PageIndex"
                                   asp-route-actionName="@Model.ActionName"
                                   asp-route-gameGenreId="@Model.GameGenreId"
                                   asp-route-searchString="@Model.SearchString">
                                            Delete
                                        </a>
                                    </li>
                                    <li>
                                        <a class="dropdown-item"
                                   asp-controller="AdminGame"
                                   asp-action="EditGame"
                                   asp-route-id="@item.Id"
                                   asp-route-pageNumber="@Model.PaginatedGames.PageIndex"
                                   asp-route-actionName="@Model.ActionName"
                                   asp-route-gameGenreId="@Model.GameGenreId"
                                   asp-route-searchString="@Model.SearchString">
                                            Edit
                                        </a>
                                    </li>
                                </ul>

                            </div>
                        }

                        @if (User.Identity.IsAuthenticated)
                        {
                            <a type="button" class="btn btn-success btn-action btn-add" asp-controller="UserLibrary" asp-action="AddGameToUserLibrary"
                       asp-route-id="@item.Id"
                       asp-route-pageNumber="@Model.PaginatedGames.PageIndex"
                       asp-route-actionName="@Model.ActionName"
                       asp-route-gameGenreId="@Model.GameGenreId"
                       asp-route-searchString="@Model.SearchString">

                                <i class="fa fa-plus-circle" aria-hidden="true"></i>
                                <span class="add-text">Add</span>
                            </a>
                        }
                    </div>

                    <div class="card-body">

                        <a class="btn-link" asp-controller="Game" asp-action="GameDetails" asp-route-id="@item.Id">
                            <h4 class="card-title">@item.Name</h4>
                        </a>

                        <div class="card-body-bottom">
                            <p>@item.ReleaseDate.ToString("MMM d, yyyy", CultureInfo.CreateSpecificCulture("en-US"))</p>
                            @{
                                var ratingScore = @item.Ratings.Select(x => x.GameRating).DefaultIfEmpty().Average();
                            }
                            <div style=""><span>&#11088; @Math.Round(ratingScore, 1)</span></div>
                        </div>

                    </div>
                </div>
            </div>
        }
    </div>
</div>